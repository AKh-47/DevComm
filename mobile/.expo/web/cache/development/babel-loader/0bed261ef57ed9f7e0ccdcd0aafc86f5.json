{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/akhilkala/Desktop/App/DevComm/mobile/context/RoomsContext.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport socket from \"../utils/socket\";\nvar RoomsContext = React.createContext(null);\nexport function useRooms() {\n  return useContext(RoomsContext);\n}\nexport default function RoomsProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      room = _useState2[0],\n      setRoom = _useState2[1];\n\n  var joinRoom = function joinRoom(roomID) {\n    socket.emit(\"join-room\", \"react\");\n    setRoom(roomID);\n  };\n\n  var leaveRoom = function leaveRoom(roomID) {\n    socket.emit(\"leave-room\", \"react\");\n    setRoom(null);\n  };\n\n  var sendMessage = function sendMessage(roomID) {\n    if (!room) return;\n    socket.emit(\"leave-room\", room);\n  };\n\n  var value = {\n    joinRoom: joinRoom,\n    leaveRoom: leaveRoom\n  };\n  return React.createElement(RoomsContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["/home/akhilkala/Desktop/App/DevComm/mobile/context/RoomsContext.tsx"],"names":["React","useContext","useState","socket","RoomsContext","createContext","useRooms","RoomsProvider","children","room","setRoom","joinRoom","roomID","emit","leaveRoom","sendMessage","value"],"mappings":";;AAAA,OAAOA,KAAP,IAA8BC,UAA9B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,OAAOC,MAAP;AAQA,IAAMC,YAAY,GAAGJ,KAAK,CAACK,aAAN,CAAqC,IAArC,CAArB;AAEA,OAAO,SAASC,QAAT,GAAoB;AACzB,SAAOL,UAAU,CAACG,YAAD,CAAjB;AACD;AAED,eAAe,SAASG,aAAT,OAA0D;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;;AAAA,kBAC/CN,QAAQ,CAAiB,IAAjB,CADuC;AAAA;AAAA,MAChEO,IADgE;AAAA,MAC1DC,OAD0D;;AAGvE,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,MAAD,EAAoB;AACnCT,IAAAA,MAAM,CAACU,IAAP,CAAY,WAAZ,EAAyB,OAAzB;AACAH,IAAAA,OAAO,CAACE,MAAD,CAAP;AACD,GAHD;;AAKA,MAAME,SAAS,GAAG,SAAZA,SAAY,CAACF,MAAD,EAAoB;AACpCT,IAAAA,MAAM,CAACU,IAAP,CAAY,YAAZ,EAA0B,OAA1B;AACAH,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHD;;AAKA,MAAMK,WAAW,GAAG,SAAdA,WAAc,CAACH,MAAD,EAAoB;AACtC,QAAI,CAACH,IAAL,EAAW;AACXN,IAAAA,MAAM,CAACU,IAAP,CAAY,YAAZ,EAA0BJ,IAA1B;AACD,GAHD;;AAKA,MAAMO,KAAK,GAAG;AACZL,IAAAA,QAAQ,EAARA,QADY;AAEZG,IAAAA,SAAS,EAATA;AAFY,GAAd;AAKA,SACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEE,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCR,QAAtC,CADF;AAGD","sourcesContent":["import React, { ReactElement, useContext, useState } from \"react\";\nimport { Room, Nullable } from \"../utils/types\";\nimport socket from \"../utils/socket\";\n\ninterface Props {\n  children: ReactElement;\n}\n\ninterface Value {}\n\nconst RoomsContext = React.createContext<Nullable<Value>>(null);\n\nexport function useRooms() {\n  return useContext(RoomsContext);\n}\n\nexport default function RoomsProvider({ children }: Props): ReactElement {\n  const [room, setRoom] = useState<Nullable<Room>>(null);\n\n  const joinRoom = (roomID: string) => {\n    socket.emit(\"join-room\", \"react\");\n    setRoom(roomID);\n  };\n\n  const leaveRoom = (roomID: string) => {\n    socket.emit(\"leave-room\", \"react\");\n    setRoom(null);\n  };\n\n  const sendMessage = (roomID: string) => {\n    if (!room) return;\n    socket.emit(\"leave-room\", room);\n  };\n\n  const value = {\n    joinRoom,\n    leaveRoom,\n  };\n\n  return (\n    <RoomsContext.Provider value={value}>{children}</RoomsContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}