{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/akhilkala/Desktop/App/DevComm/mobile/context/AuthContext.tsx\";\nimport React, { useContext, useState } from \"react\";\nimport { POST } from \"../utils/request\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar AuthContext = React.createContext(null);\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport default function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(function _callee() {\n    var user;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n          case 2:\n            user = _context.sent;\n\n            if (!user) {\n              _context.next = 7;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 7:\n            return _context.abrupt(\"return\", null);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  var register = function register(username, password) {\n    return _regeneratorRuntime.async(function register$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var login = function login(username, password) {\n    var _await$POST, user, message, error;\n\n    return _regeneratorRuntime.async(function login$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(POST(\"/auth/login\", {\n              username: username,\n              password: password\n            }));\n\n          case 2:\n            _await$POST = _context3.sent;\n            user = _await$POST.user;\n            message = _await$POST.message;\n            error = _await$POST.error;\n\n            if (error) {\n              _context3.next = 13;\n              break;\n            }\n\n            setCurrentUser(user);\n            _context3.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", JSON.stringify(user)));\n\n          case 10:\n            return _context3.abrupt(\"return\", null);\n\n          case 13:\n            return _context3.abrupt(\"return\", error);\n\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var logout = function logout() {\n    return _regeneratorRuntime.async(function logout$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setCurrentUser(null);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", JSON.stringify(null)));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var value = {\n    currentUser: currentUser,\n    register: register,\n    login: login,\n    logout: logout\n  };\n  return React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }, children);\n}","map":{"version":3,"sources":["/home/akhilkala/Desktop/App/DevComm/mobile/context/AuthContext.tsx"],"names":["React","useContext","useState","POST","AsyncStorage","AuthContext","createContext","useAuth","AuthProvider","children","getItem","user","currentUser","setCurrentUser","register","username","password","login","message","error","setItem","JSON","stringify","logout","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,UAA9B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,SAASC,IAAT;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AAaA,IAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,CAAqC,IAArC,CAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD;AAED,eAAe,SAASG,YAAT,OAAyD;AAAA,MAAjCC,QAAiC,QAAjCA,QAAiC;;AAAA,kBAChCP,QAAQ,CAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC1CE,YAAY,CAACM,OAAb,CAAqB,MAArB,CAD0C;;AAAA;AACvDC,YAAAA,IADuD;;AAAA,iBAGzDA,IAHyD;AAAA;AAAA;AAAA;;AAAA,6CAIpD,IAJoD;;AAAA;AAAA,6CAMpD,IANoD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB,CADwB;AAAA;AAAA,MAC/DC,WAD+D;AAAA,MAClDC,cADkD;;AAWtE,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,QAAP,EAAyBC,QAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAEA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAAOF,QAAP,EAAyBC,QAAzB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC2Bb,IAAI,CAAC,aAAD,EAAgB;AACzDY,cAAAA,QAAQ,EAARA,QADyD;AAEzDC,cAAAA,QAAQ,EAARA;AAFyD,aAAhB,CAD/B;;AAAA;AAAA;AACJL,YAAAA,IADI,eACJA,IADI;AACEO,YAAAA,OADF,eACEA,OADF;AACWC,YAAAA,KADX,eACWA,KADX;;AAAA,gBAMPA,KANO;AAAA;AAAA;AAAA;;AAOVN,YAAAA,cAAc,CAACF,IAAD,CAAd;AAPU;AAAA,6CAQJP,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAA7B,CARI;;AAAA;AAAA,8CASH,IATG;;AAAA;AAAA,8CAWHQ,KAXG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAd;;AAeA,MAAMI,MAAM,GAAG,SAATA,MAAS;AAAA;AAAA;AAAA;AAAA;AACbV,YAAAA,cAAc,CAAC,IAAD,CAAd;AADa;AAAA,6CAEPT,YAAY,CAACgB,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,IAAf,CAA7B,CAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf;;AAKA,MAAME,KAAK,GAAG;AACZZ,IAAAA,WAAW,EAAXA,WADY;AAEZE,IAAAA,QAAQ,EAARA,QAFY;AAGZG,IAAAA,KAAK,EAALA,KAHY;AAIZM,IAAAA,MAAM,EAANA;AAJY,GAAd;AAOA,SAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCf,QAArC,CAAP;AACD","sourcesContent":["import React, { ReactElement, useContext, useState } from \"react\";\nimport { POST } from \"../utils/request\";\nimport { User, Nullable } from \"../utils/types\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\ninterface Props {\n  children: ReactElement;\n}\n\ninterface Value {\n  currentUser: Nullable<User>;\n  register: (email: string, password: string) => Promise<void>;\n  login: (email: string, password: string) => Promise<any>;\n  logout: () => Promise<void>;\n}\n\nconst AuthContext = React.createContext<Nullable<Value>>(null);\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport default function AuthProvider({ children }: Props): ReactElement {\n  const [currentUser, setCurrentUser] = useState<Nullable<User>>(async () => {\n    const user = await AsyncStorage.getItem(\"user\");\n\n    if (user) {\n      return null;\n    } else {\n      return null;\n    }\n  });\n\n  const register = async (username: string, password: string) => {};\n\n  const login = async (username: string, password: string) => {\n    const { user, message, error } = await POST(\"/auth/login\", {\n      username,\n      password,\n    });\n\n    if (!error) {\n      setCurrentUser(user);\n      await AsyncStorage.setItem(\"user\", JSON.stringify(user));\n      return null;\n    } else {\n      return error;\n    }\n  };\n\n  const logout = async () => {\n    setCurrentUser(null);\n    await AsyncStorage.setItem(\"user\", JSON.stringify(null));\n  };\n\n  const value = {\n    currentUser,\n    register,\n    login,\n    logout,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}