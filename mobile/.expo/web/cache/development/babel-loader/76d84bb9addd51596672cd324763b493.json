{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/akhilkala/Desktop/App/DevComm/mobile/components/auth/Login.tsx\";\nimport React, { useState } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport useInputState from \"../../hooks/useInputState\";\nimport { View } from \"../../styles\";\nimport { AuthInput, AuthButton, AuthSwitch, AuthSwitchText, AuthDiv, AuthH1, AuthTop, AuthBottom, P, AuthButtonText } from \"./Auth.styles\";\nexport default function Login(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useInputState = useInputState(),\n      _useInputState2 = _slicedToArray(_useInputState, 3),\n      username = _useInputState2[0],\n      setUsername = _useInputState2[1],\n      resetUsername = _useInputState2[2];\n\n  var _useInputState3 = useInputState(),\n      _useInputState4 = _slicedToArray(_useInputState3, 3),\n      password = _useInputState4[0],\n      setPassword = _useInputState4[1],\n      resetpassword = _useInputState4[2];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var auth = useAuth();\n\n  var handleSubmit = function handleSubmit() {\n    return _regeneratorRuntime.async(function handleSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!username || !password) {\n              setError(true);\n            } else {\n              setError(false);\n            }\n\n            auth == null ? void 0 : auth.login(username, password);\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(AuthDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthTop, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(AuthH1, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Log in\"), React.createElement(P, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"Login to your account to access the community\")), error && React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Error\"), \" \", React.createElement(AuthBottom, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(AuthInput, {\n    onChangeText: setUsername,\n    placeholder: \"Username\",\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthInput, {\n    onChangeText: setPassword,\n    placeholder: \"Password\",\n    value: password,\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), React.createElement(AuthSwitch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(AuthSwitchText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Don't have an account?\", React.createElement(TouchableOpacity, {\n    style: {\n      marginLeft: 5\n    },\n    onPress: function onPress() {\n      return navigation.navigate(\"Register\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, React.createElement(AuthSwitchText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Register\")))), React.createElement(TouchableOpacity, {\n    disabled: error,\n    onPress: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(AuthButton, {\n    disabled: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, React.createElement(AuthButtonText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, \"Submit\")))));\n}","map":{"version":3,"sources":["/home/akhilkala/Desktop/App/DevComm/mobile/components/auth/Login.tsx"],"names":["React","useState","useAuth","useInputState","View","AuthInput","AuthButton","AuthSwitch","AuthSwitchText","AuthDiv","AuthH1","AuthTop","AuthBottom","P","AuthButtonText","Login","navigation","username","setUsername","resetUsername","password","setPassword","resetpassword","error","setError","auth","handleSubmit","login","marginLeft","navigate"],"mappings":"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","sourcesContent":["import React, { ReactElement, useState } from \"react\";\nimport { TouchableOpacity } from \"react-native\";\nimport { useAuth } from \"../../context/AuthContext\";\nimport useInputState from \"../../hooks/useInputState\";\nimport { View } from \"../../styles\";\n\nimport {\n  AuthInput,\n  AuthButton,\n  AuthSwitch,\n  AuthSwitchText,\n  AuthDiv,\n  AuthH1,\n  AuthTop,\n  AuthBottom,\n  P,\n  Error,\n  AuthButtonText,\n} from \"./Auth.styles\";\n\nexport default function Login({ navigation }: any): ReactElement {\n  const [username, setUsername, resetUsername] = useInputState();\n  const [password, setPassword, resetpassword] = useInputState();\n\n  const [error, setError] = useState(false);\n\n  const auth = useAuth();\n\n  const handleSubmit = async () => {\n    if (!username || !password) {\n      setError(true);\n    } else {\n      setError(false);\n    }\n\n    auth?.login(username, password);\n  };\n\n  return (\n    <AuthDiv>\n      <AuthTop>\n        <AuthH1>Log in</AuthH1>\n        <P>Login to your account to access the community</P>\n      </AuthTop>\n      {error && <View>Error</View>}{\" \"}\n      <AuthBottom>\n        <AuthInput\n          onChangeText={setUsername}\n          placeholder=\"Username\"\n          value={username}\n        />\n        <AuthInput\n          onChangeText={setPassword}\n          placeholder=\"Password\"\n          value={password}\n          secureTextEntry={true}\n        />\n        <AuthSwitch>\n          <AuthSwitchText>\n            Don't have an account?\n            <TouchableOpacity\n              style={{ marginLeft: 5 }}\n              onPress={() => navigation.navigate(\"Register\")}\n            >\n              <AuthSwitchText>Register</AuthSwitchText>\n            </TouchableOpacity>\n          </AuthSwitchText>\n        </AuthSwitch>\n        <TouchableOpacity disabled={error} onPress={handleSubmit}>\n          <AuthButton disabled={error}>\n            <AuthButtonText>Submit</AuthButtonText>\n          </AuthButton>\n        </TouchableOpacity>\n      </AuthBottom>\n    </AuthDiv>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}