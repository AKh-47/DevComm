{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/akhilkala/Desktop/App/DevComm/mobile/context/AuthContext.tsx\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { POST } from \"../utils/request\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nvar AuthContext = React.createContext(null);\nexport function useAuth() {\n  return useContext(AuthContext);\n}\nexport default function AuthProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentUser = _useState2[0],\n      setCurrentUser = _useState2[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var user;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"user\"));\n\n            case 2:\n              user = _context.sent;\n\n              if (user) {\n                setCurrentUser(JSON.parse(user));\n              } else {\n                setCurrentUser(null);\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var register = function register(username, password) {\n    var _await$POST, error;\n\n    return _regeneratorRuntime.async(function register$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(POST(\"/auth/register\", {\n              username: username,\n              password: password\n            }));\n\n          case 2:\n            _await$POST = _context2.sent;\n            error = _await$POST.error;\n\n            if (error) {\n              _context2.next = 8;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", null);\n\n          case 8:\n            return _context2.abrupt(\"return\", error);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var login = function login(username, password) {\n    var _await$POST2, user, error;\n\n    return _regeneratorRuntime.async(function login$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(POST(\"/auth/login\", {\n              username: username,\n              password: password\n            }));\n\n          case 2:\n            _await$POST2 = _context3.sent;\n            user = _await$POST2.user;\n            error = _await$POST2.error;\n\n            if (error) {\n              _context3.next = 12;\n              break;\n            }\n\n            setCurrentUser(user._doc);\n            _context3.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"user\", JSON.stringify(user._doc)));\n\n          case 9:\n            return _context3.abrupt(\"return\", null);\n\n          case 12:\n            return _context3.abrupt(\"return\", error);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var logout = function logout() {\n    return _regeneratorRuntime.async(function logout$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            setCurrentUser(null);\n            _context4.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.removeItem(\"user\"));\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var isCurrentUser = function isCurrentUser(userID) {\n    return (currentUser == null ? void 0 : currentUser._id) === userID;\n  };\n\n  var value = {\n    currentUser: currentUser,\n    register: register,\n    login: login,\n    logout: logout,\n    isCurrentUser: isCurrentUser\n  };\n  return React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 10\n    }\n  }, children);\n}","map":{"version":3,"sources":["/home/akhilkala/Desktop/App/DevComm/mobile/context/AuthContext.tsx"],"names":["React","useContext","useState","useEffect","POST","AsyncStorage","AuthContext","createContext","useAuth","AuthProvider","children","currentUser","setCurrentUser","getItem","user","JSON","parse","register","username","password","error","login","_doc","setItem","stringify","logout","removeItem","isCurrentUser","userID","_id","value"],"mappings":"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","sourcesContent":["import React, { ReactElement, useContext, useState, useEffect } from \"react\";\nimport { POST } from \"../utils/request\";\nimport { User, Nullable } from \"../utils/types\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\ninterface Props {\n  children: ReactElement;\n}\n\ninterface Value {\n  currentUser: Nullable<User>;\n  register: (email: string, password: string) => Promise<void>;\n  login: (email: string, password: string) => Promise<any>;\n  logout: () => Promise<void>;\n  isCurrentUser: (userID: string) => boolean;\n}\n\nconst AuthContext = React.createContext<Nullable<Value>>(null);\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n\nexport default function AuthProvider({ children }: Props): ReactElement {\n  const [currentUser, setCurrentUser] = useState<Nullable<User>>(null);\n\n  useEffect(() => {\n    (async () => {\n      const user = await AsyncStorage.getItem(\"user\");\n\n      if (user) {\n        setCurrentUser(JSON.parse(user));\n      } else {\n        setCurrentUser(null);\n      }\n    })();\n  }, []);\n\n  const register = async (username: string, password: string) => {\n    const { error } = await POST(\"/auth/register\", {\n      username,\n      password,\n    });\n\n    if (!error) {\n      return null;\n    } else {\n      return error;\n    }\n  };\n\n  const login = async (username: string, password: string) => {\n    const { user, error } = await POST(\"/auth/login\", {\n      username,\n      password,\n    });\n\n    if (!error) {\n      setCurrentUser(user._doc);\n      await AsyncStorage.setItem(\"user\", JSON.stringify(user._doc));\n      return null;\n    } else {\n      return error;\n    }\n  };\n\n  const logout = async () => {\n    setCurrentUser(null);\n    await AsyncStorage.removeItem(\"user\");\n  };\n\n  const isCurrentUser = (userID: string) => {\n    return currentUser?._id === userID;\n  };\n\n  const value = {\n    currentUser,\n    register,\n    login,\n    logout,\n    isCurrentUser,\n  };\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}